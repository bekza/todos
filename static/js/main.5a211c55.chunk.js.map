{"version":3,"sources":["components/TaskInput.jsx","components/TaskList.jsx","components/CompletedTasks.jsx","App.jsx","utils/utils.js","reportWebVitals.js","index.js"],"names":["TaskInput","handleAdd","inputValue","setInputValue","className","onSubmit","type","placeholder","value","onChange","e","target","TaskList","tasks","handleDone","length","map","item","name","onClick","event","id","CompletedTasks","completedTasks","setIsHideCompleted","isHideCompleted","handleDelete","App","useState","savedCompletedTasks","localStorage","getItem","JSON","parse","setCompletedTasks","savedTasks","setTasks","useEffect","setItem","stringify","pre","preventDefault","Date","getTime","isDone","completedTask","filter","task","updateTasks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a211c55.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function TaskInput({ handleAdd, inputValue, setInputValue }) {\n\treturn (\n\t\t<form className=\"header\" onSubmit={handleAdd}>\n\t\t\t<input\n\t\t\t\tclassName=\"todo-input\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Add a task...\"\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(e) => setInputValue(e.target.value)} />\n\t\t\t<button className=\"add-button\" type=\"submit\">&#10133;</button>\n\t\t</form>\n\t)\n}\n","import React from 'react'\n\nexport default function TaskList({ tasks, handleDone }) {\n  return (\n    <div className=\"task-list\">\n      {tasks.length > 0 && (\n        <ul>\n          {\n            tasks.map((item) => {\n              return (\n                <li key={item.id}>\n                  {item.name}\n                  <input className=\"done-checkbox\" type=\"checkbox\" onClick={(event) => handleDone(item)} />\n                </li>)\n            })\n          }\n        </ul>\n      )\n      }\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function CompletedTasks({ completedTasks, setIsHideCompleted, isHideCompleted, handleDelete }) {\n    return (\n        <div className=\"completed-tasks\">\n            {completedTasks.length > 0 && (\n                <>\n                    <h4>Completed {completedTasks.length} <button className=\"show-hide\" onClick={() => setIsHideCompleted(!isHideCompleted)}>{isHideCompleted ? 'Show' : 'Hide'}</button></h4>\n                    {!isHideCompleted && <ul>\n                        {completedTasks.map((item) => {\n                            return (\n                                <li key={item.id}>\n                                    {item.name}\n                                    <span>\n                                        <button className=\"delete-button\" onClick={() => handleDelete(item)}>&#10060;</button>\n                                    </span>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                    }\n                </>)}\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { generateKey } from \"./utils/utils\";\nimport TaskInput from \"./components/TaskInput\";\nimport TaskList from \"./components/TaskList\";\nimport CompletedTasks from \"./components/CompletedTasks\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isHideCompleted, setIsHideCompleted] = useState(true);\n  const [completedTasks, setCompletedTasks] = useState(() => {\n    const savedCompletedTasks = localStorage.getItem(\"completedTasks\");\n    if (savedCompletedTasks) {\n      return JSON.parse(savedCompletedTasks);\n    } else {\n      return [];\n    }\n  });\n  const [tasks, setTasks] = useState(() => {\n    const savedTasks = localStorage.getItem(\"tasks\");\n    if (savedTasks) {\n      return JSON.parse(savedTasks);\n    } else {\n      return [];\n    }\n  });\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n    if (inputValue.length > 0) {\n      setTasks([\n        ...tasks,\n        {\n          id: generateKey(inputValue),\n          name: inputValue,\n          isDone: false,\n        },\n      ]);\n      // reset input after add\n      setInputValue(\"\");\n    }\n  };\n\n  const handleDelete = (item) => {\n    const task = completedTasks.filter((task) => task.id !== item.id);\n    setCompletedTasks(task);\n  };\n\n  const handleDone = (item) => {\n    const completedTask = tasks.filter((task) => task.id === item.id);\n    setCompletedTasks([...completedTasks, ...completedTask]);\n\n    const updateTasks = tasks.filter((task) => task.id !== item.id);\n    setTasks(updateTasks);\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    localStorage.setItem(\"completedTasks\", JSON.stringify(completedTasks));\n  }, [tasks, completedTasks]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"todo\">\n        <h3>Tasks</h3>\n        <TaskInput\n          handleAdd={handleAdd}\n          inputValue={inputValue}\n          setInputValue={setInputValue}\n        />\n        <TaskList tasks={tasks} handleDone={handleDone} />\n        <CompletedTasks\n          completedTasks={completedTasks}\n          setIsHideCompleted={setIsHideCompleted}\n          isHideCompleted={isHideCompleted}\n          handleDelete={handleDelete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","export const generateKey = (pre) => {\n\treturn `${pre}_${new Date().getTime()}`;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}